#!/usr/bin/env python3
import requests
import automationassets

STOCK = "ASX"
COMPANY_NAME = "ASE Technology"

url = "https://www.alphavantage.co/query"

stock_parameters = {
    "function":"TIME_SERIES_DAILY_ADJUSTED",
    "symbol":STOCK,
    "outputsize":"compact",
    "apikey":automationassets.get_automation_variable("ALPHAVANTAGE_KEY")
}


# Pull financial data

connection = requests.get(url,params=stock_parameters)
connection.raise_for_status()

data = connection.json()

date_list = data["Time Series (Daily)"].keys()
date_list = list(date_list)

latest_date = date_list[0]
second_latest_date = date_list[1]
latest_pricing = data["Time Series (Daily)"][str(latest_date)]["5. adjusted close"]
latest_pricing = float(latest_pricing)
second_last_date_pricing = data["Time Series (Daily)"][str(second_latest_date)]["5. adjusted close"]
second_last_date_pricing = float(second_last_date_pricing)

price_change = round((latest_pricing-second_last_date_pricing)/second_last_date_pricing,2)

if abs(price_change) >= 0.10:
    # Pull news data

    news_parameters = {
        "q":COMPANY_NAME,
        "language":"en"
    }
    news_headers = {
        "apiKey":automationassets.get_automation_variable("NEWS_API_KEY")
    }

    news_connection = requests.get("https://newsapi.org/v2/everything",params=news_parameters,headers = news_headers)
    news_connection.raise_for_status()

    news_data = news_connection.json()
    all_news = list(news_data["articles"])
    news_list = all_news[:3]

    headlines = []
    for news in news_list:
        title = news["title"]
        headlines.append(title)

    sms_content = "\n".join(headlines)
    
    # Send SMS
    print(f"{STOCK} stock price has changed by {price_change*100}% DoD.\nCurrent price: {latest_pricing}\nHeadlines:\n{sms_content}")

    from twilio.rest import Client

    account_sid = automationassets.get_automation_variable("TW_ACC_SID")
    auth_token = automationassets.get_automation_variable("TW_AUTH_TOKEN")
    twilio_client = Client(account_sid,auth_token)

    message = twilio_client.messages.create(
            body=f"{STOCK} stock price has changed by {price_change*100}% DoD.\nCurrent price: {latest_pricing}\nHeadlines:\n{sms_content}",
            from_=automationassets.get_automation_variable("TW_PH_NUM"),
            to=automationassets.get_automation_variable("MY_NUM")
        )
    print("SMS Sent")
    
else:
    print("All clear")

